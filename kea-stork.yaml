services:
  db:
    image: postgres:${POSTGRES_VERSION}
    container_name: db
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "psql -U kea -d kea -c 'SELECT version FROM schema_version'"]
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - TZ=${TZ}
      - DEBIAN_FRONTEND=noninteractive
    volumes:
      - ./database:/var/lib/postgresql
      - type: bind
        source: ./initdb  # Database setup script from kea for the first run
        target: /docker-entrypoint-initdb.d
    network_mode: host

  kea:
    image: docker.cloudsmith.io/isc/docker/kea-dhcp4:${KEA_VERSION}
    container_name: kea
    depends_on:
      db:
        condition: service_healthy  # Delay start until the database is healthy
    network_mode: host
    environment:
      - TZ=${TZ}
      - DEBIAN_FRONTEND=noninteractive
    volumes:
      - type: bind
        source: ./kea  # Configuration files for Kea
        target: /etc/kea
      - type: bind
        source: ./kea-temp  # Configuration files for Kea
        target: /temp
      - ./kea/var:/var/lib/kea  # Persistent data
    restart: always

  stork-server:
    restart: always
    # Explicitly add entries to /etc/hosts for the hosts which are connected
    # to more than two networks. These explicit entries should be added at the
    # beginning of the /etc/hosts file enforcing that the connections by hostname
    # are established with the IP addresses belonging to the storknet network.
    # Before this change, agents sometimes listened on IP addresses dedicated for
    # DHCP communication instead.
    #extra_hosts:
    #  - "agent-kea:172.24.0.100"
    #  - "agent-kea6:172.24.0.106"
    #  - "agent-kea-premium-one:172.24.0.103"
    build:
      context: .
      dockerfile: stork/server/Dockerfile
    container_name: stork-server
    network_mode: host
    environment:
      - TZ=${TZ}
      - DEBIAN_FRONTEND=noninteractive
    volumes:
      - ./stork/server/stork-server.env:/etc/stork/server.env
      - ./stork/config/supervisor/supervisord.conf:/etc/supervisor/supervisord.conf
      - ./stork/config/supervisor/stork-server.conf:/etc/supervisor/conf.d/stork-server.conf
      - ./stork/config/supervisor/supervisor_monitor.conf:/etc/supervisor/conf.d/supervisor_monitor.conf
      - ./stork/tools/supervisor_monitor.py:/usr/lib/supervisor_monitor.py
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - ./stork/server/server.env:/etc/stork/server.env
    depends_on:
      - db

  stork-agent:
    build:
      context: .
      dockerfile: stork/agent/Dockerfile
    container_name: stork-agent
    network_mode: host
    environment:
      - TZ=${TZ}
      - DEBIAN_FRONTEND=noninteractive
    volumes:
      - type: bind
        source: ./kea-temp  # Configuration files for Kea
        target: /temp  # Required for accessing Kea's control socket
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - ./stork/agent/agent.env:/etc/stork/agent.env
    depends_on:
      - stork-server
      - kea
  
  prometheus:
    restart: always
    image: prom/prometheus:v2.32.1
    container_name: prometheus
    network_mode: host
    environment:
      - TZ=${TZ}
      - DEBIAN_FRONTEND=noninteractive
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    restart: always
    image: grafana/grafana:8.3.7
    container_name: grafana
    network_mode: host
    environment:
      - TZ=${TZ}
      - DEBIAN_FRONTEND=noninteractive
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/config/grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./grafana/config/grafana/datasource.yaml:/etc/grafana/provisioning/datasources/datasource.yaml
      - ./grafana/config/grafana/dashboards.yaml:/etc/grafana/provisioning/dashboards/dashboards.yaml
      - ./grafana/kea-dhcp4.json:/var/lib/grafana/dashboards/kea-dhcp4.json
      #- ./grafana/kea-dhcp6.json:/var/lib/grafana/dashboards/kea-dhcp6.json
      #- ./grafana/bind9-resolver.json:/var/lib/grafana/dashboards/bind9-resolver.json
    depends_on:
      - prometheus
    